cmake_minimum_required(VERSION 3.8)
project(nuturtle_control)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(turtlelib)
find_package(nuturtlebot_msgs)
find_package(sensor_msgs)
find_package(nav_msgs)



add_executable(turtle_control src/turtle_control.cpp)
target_link_libraries(turtle_control turtlelib::turtlelib)
add_executable(odometry src/odometry.cpp)
target_link_libraries(odometry turtlelib::turtlelib)

ament_target_dependencies(
  turtle_control
  rclcpp
  std_msgs
  geometry_msgs
  tf2
  tf2_ros
  turtlelib
  nuturtlebot_msgs
  sensor_msgs
  nav_msgs)

  ament_target_dependencies(
  odometry
  rclcpp
  std_msgs
  geometry_msgs
  tf2
  tf2_ros
  turtlelib
  nuturtlebot_msgs
  sensor_msgs
  nav_msgs)

install(
  DIRECTORY launch
  DESTINATION share/${PROJECT_NAME})
install(
  TARGETS turtle_control odometry
  DESTINATION lib/${PROJECT_NAME})




ament_export_dependencies(rosidl_default_runtime)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
